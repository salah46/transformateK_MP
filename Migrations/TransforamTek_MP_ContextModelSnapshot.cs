// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using transformatek_MP.Data;

#nullable disable

namespace transformatek_MP.Migrations
{
    [DbContext(typeof(TransforamTek_MP_Context))]
    partial class TransforamTek_MP_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("transformatek_MP.Models.Admin", b =>
                {
                    b.Property<int?>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Famillyname_Admin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name_Admin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Admin_ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("transformatek_MP.Models.Affectation", b =>
                {
                    b.Property<string>("Affectation_ID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Admin_ID")
                        .HasColumnType("INTEGER");

<<<<<<< HEAD
                    b.Property<string>("AgentId_Agent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
=======
                    b.Property<string>("AgentId")
>>>>>>> 98b2ede4e842378f7634f71ccf3039a7eb0fc39d
                        .HasColumnType("TEXT");

                    b.HasKey("Affectation_ID");

                    b.HasIndex("Admin_ID");

<<<<<<< HEAD
                    b.HasIndex("AgentId_Agent");
=======
                    b.HasIndex("AgentId");
>>>>>>> 98b2ede4e842378f7634f71ccf3039a7eb0fc39d

                    b.ToTable("Affectation");
                });

            modelBuilder.Entity("transformatek_MP.Models.Agent", b =>
                {
                    b.Property<string>("Id_Agent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Famillyname_Agent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name_Agent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Agent");

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("transformatek_MP.Models.Consigner", b =>
                {
                    b.Property<string>("Consigner_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Affectation_ID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Nb_Repetations")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type_mesure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Consigner_ID");

                    b.HasIndex("Affectation_ID")
                        .IsUnique();

                    b.ToTable("Consigner");
                });

            modelBuilder.Entity("transformatek_MP.Models.Point", b =>
                {
                    b.Property<string>("Point_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Affectation_ID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Lang")
                        .HasColumnType("REAL");

                    b.Property<float>("Lat")
                        .HasColumnType("REAL");

                    b.HasKey("Point_ID");

                    b.HasIndex("Affectation_ID")
                        .IsUnique();

                    b.ToTable("Point");
                });

            modelBuilder.Entity("transformatek_MP.Models.Resultes", b =>
                {
                    b.Property<string>("Result_Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentId_Agent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mesuretype")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Result_Id");

                    b.HasIndex("AgentId_Agent");

                    b.ToTable("Resultes");
                });

            modelBuilder.Entity("transformatek_MP.Models.Affectation", b =>
                {
                    b.HasOne("transformatek_MP.Models.Admin", "Admin")
                        .WithMany("Affectations")
                        .HasForeignKey("Admin_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("transformatek_MP.Models.Agent", "Agent")
                        .WithMany("Affectations")
<<<<<<< HEAD
                        .HasForeignKey("AgentId_Agent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
=======
                        .HasForeignKey("AgentId");
>>>>>>> 98b2ede4e842378f7634f71ccf3039a7eb0fc39d

                    b.Navigation("Admin");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("transformatek_MP.Models.Consigner", b =>
                {
                    b.HasOne("transformatek_MP.Models.Affectation", "Affectation")
                        .WithOne()
                        .HasForeignKey("transformatek_MP.Models.Consigner", "Affectation_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Affectation");
                });

            modelBuilder.Entity("transformatek_MP.Models.Point", b =>
                {
                    b.HasOne("transformatek_MP.Models.Affectation", "Affectation")
                        .WithOne()
                        .HasForeignKey("transformatek_MP.Models.Point", "Affectation_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Affectation");
                });

            modelBuilder.Entity("transformatek_MP.Models.Resultes", b =>
                {
                    b.HasOne("transformatek_MP.Models.Agent", "Agent")
                        .WithMany("Resultes")
                        .HasForeignKey("AgentId_Agent");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("transformatek_MP.Models.Admin", b =>
                {
                    b.Navigation("Affectations");
                });

            modelBuilder.Entity("transformatek_MP.Models.Agent", b =>
                {
                    b.Navigation("Affectations");

                    b.Navigation("Resultes");
                });
#pragma warning restore 612, 618
        }
    }
}
