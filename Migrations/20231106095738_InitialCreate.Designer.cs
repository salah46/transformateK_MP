// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using transformatek_MP.Data;

#nullable disable

namespace transformatek_MP.Migrations
{
    [DbContext(typeof(TransforamTek_MP_Context))]
    [Migration("20231106095738_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("transformatek_MP.Models.Admin", b =>
                {
                    b.Property<int?>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Famillyname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Admin_ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("transformatek_MP.Models.Affectation", b =>
                {
                    b.Property<string>("Affectation_ID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Admin_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Consigner_ID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Point_ID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Affectation_ID");

                    b.HasIndex("Admin_ID");

                    b.HasIndex("AgentId");

                    b.HasIndex("Consigner_ID")
                        .IsUnique();

                    b.HasIndex("Point_ID")
                        .IsUnique();

                    b.ToTable("Affectation");
                });

            modelBuilder.Entity("transformatek_MP.Models.Agent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Famillyname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("transformatek_MP.Models.Consigner", b =>
                {
                    b.Property<string>("Consigner_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Affectation_ID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Nb_Repetations")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type_mesure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Consigner_ID");

                    b.HasIndex("Affectation_ID")
                        .IsUnique();

                    b.ToTable("Consigner");
                });

            modelBuilder.Entity("transformatek_MP.Models.Point", b =>
                {
                    b.Property<string>("Point_ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Affectation_ID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Lang")
                        .HasColumnType("REAL");

                    b.Property<float>("Lat")
                        .HasColumnType("REAL");

                    b.HasKey("Point_ID");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("transformatek_MP.Models.Resultes", b =>
                {
                    b.Property<string>("Result_Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mesuretype")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Result_Id");

                    b.HasIndex("AgentId");

                    b.ToTable("Resultes");
                });

            modelBuilder.Entity("transformatek_MP.Models.Affectation", b =>
                {
                    b.HasOne("transformatek_MP.Models.Admin", "Admin")
                        .WithMany("Affectations")
                        .HasForeignKey("Admin_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("transformatek_MP.Models.Point", null)
                        .WithOne("Affectation")
                        .HasForeignKey("transformatek_MP.Models.Affectation", "Affectation_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("transformatek_MP.Models.Agent", "Agent")
                        .WithMany("Affectations")
                        .HasForeignKey("AgentId");

                    b.HasOne("transformatek_MP.Models.Consigner", "Consigner")
                        .WithOne()
                        .HasForeignKey("transformatek_MP.Models.Affectation", "Consigner_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("transformatek_MP.Models.Point", "Point")
                        .WithOne()
                        .HasForeignKey("transformatek_MP.Models.Affectation", "Point_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Agent");

                    b.Navigation("Consigner");

                    b.Navigation("Point");
                });

            modelBuilder.Entity("transformatek_MP.Models.Consigner", b =>
                {
                    b.HasOne("transformatek_MP.Models.Affectation", "Affectation")
                        .WithOne()
                        .HasForeignKey("transformatek_MP.Models.Consigner", "Affectation_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Affectation");
                });

            modelBuilder.Entity("transformatek_MP.Models.Resultes", b =>
                {
                    b.HasOne("transformatek_MP.Models.Agent", "Agent")
                        .WithMany("Resultes")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("transformatek_MP.Models.Admin", b =>
                {
                    b.Navigation("Affectations");
                });

            modelBuilder.Entity("transformatek_MP.Models.Agent", b =>
                {
                    b.Navigation("Affectations");

                    b.Navigation("Resultes");
                });

            modelBuilder.Entity("transformatek_MP.Models.Point", b =>
                {
                    b.Navigation("Affectation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
